expression      ->  boolOr;
boolOr          ->  boolAnd (OR boolAnd)* ;
boolAnd         ->  equal (AND equal)* ;
equal           ->  compare ( (EQ | NE) compare)* ;
compare         ->  addSub ( (GT | GTE | LT | LTE) addSub)* ;
addSub          ->  mulDiv ( (PLUS | MINUS) mulDiv)* ;
mulDiv          ->  unary ( (MUL | DIV) unary)* ;
unary           ->  (NOT | MINUS)? primary ;
primary         ->  STRING | INT | DOUBLE | 'true' | 'false' | 'null' | '(' expression ')' | callable ;
callable        ->  ID ( '(' args? ')' )? ('.' callable)* ;
args            ->  expression (',' expression)* ;

OR              ->  ('or' | '||') ;
AND             ->  ('and' | '&&') ;
EQ              ->  ('eq' | '==') ;
NE              ->  ('ne' | '!=') ;
GT              ->  ('gt' | '>') ;
GTE             ->  ('gte' | '>=') ;
LT              ->  ('lt' | '<') ;
LTE             ->  ('lte' | '<=') ;
PLUS            ->  '+' ;
MINUS           ->  '-' ;
MUL             ->  '*' ;
DIV             ->  '/' ;
NOT             ->  '!' ;
STRING          ->  '((\\')|[^'])*?' ;
DOUBLE          ->  [0-9]+(\.[0-9]+)* ;
INT             ->  [0-9]+ ;
ID              ->  [a-zA-Z][a-zA-Z0-9_]+ ;